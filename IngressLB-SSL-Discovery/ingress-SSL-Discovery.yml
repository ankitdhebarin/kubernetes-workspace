apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-discovery
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: "cert-discovery"
    alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/scheme: internal
    #Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    # SSL Settings
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'

    # SSL Discovery should auto discover based on the ACM Certs
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:160470652083:certificate/8d40ba2d-1cba-42b8-88c0-e2acb4c29c99

    # SSL Redirect Setting
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    # External DNS - For creating a Record Set in Route53
    external-dns.alpha.kubernetes.io/hostname: dnstest101.lifesimplifynow.com

spec:
  ingressClassName: my-aws-ingress-class
  defaultBackend:
    service:
      name: app3-nginx-nodeport-service
      port:
        number: 80
  rules:
  - host: app102.lifesimplifynow.com
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: app1-nginx-nodeport-service
              port: 
                number: 80
  - host: app202.lifesimplifynow.com
    http:
      paths:                  
        - path: /
          pathType: Prefix
          backend:
            service:
              name: app2-nginx-nodeport-service
              port: 
                number: 80
  
  # Important Note-1: In path based routing order is very important, if we are going to use  "/*", try to use it at the end of all rules.                                        
                        
# 1. If  "spec.ingressClassName: my-aws-ingress-class" not specified, will reference default ingress class on this kubernetes cluster
# 2. Default Ingress class is nothing but for which ingress class we have the annotation `ingressclass.kubernetes.io/is-default-class: "true"`
      